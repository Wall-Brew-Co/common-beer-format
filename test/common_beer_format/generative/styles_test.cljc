(ns common-beer-format.generative.styles-test
  (:require [common-beer-format.generative.util :as gen]
            [common-beer-format.specs.styles :as styles]
            #? (:clj  [clojure.test :refer [deftest is testing]])
            #? (:cljs [cljs.test    :refer-macros [deftest is testing]])))


(deftest valid-generators-test
  (testing "Ensure all generators work out of the box"
    (is (gen/generatable? ::styles/ibu-range))
    (is (gen/generatable? ::styles/type))
    (is (gen/generatable? ::styles/style-letter))
    (is (gen/generatable? ::styles/abv-min))
    (is (gen/generatable? ::styles/og-max))
    (is (gen/generatable? ::styles/styles))
    (is (gen/generatable? ::styles/category))
    (is (gen/generatable? ::styles/carb-range))
    (is (gen/generatable? ::styles/display-fg-max))
    (is (gen/generatable? ::styles/ingredients))
    (is (gen/generatable? ::styles/color-range))
    (is (gen/generatable? ::styles/style-wrapper))
    (is (gen/generatable? ::styles/abv-range))
    (is (gen/generatable? ::styles/profile))
    (is (gen/generatable? ::styles/display-og-min))
    (is (gen/generatable? ::styles/abv-max))
    (is (gen/generatable? ::styles/og-range))
    (is (gen/generatable? ::styles/color-max))
    (is (gen/generatable? ::styles/examples))
    (is (gen/generatable? ::styles/style-guide))
    (is (gen/generatable? ::styles/category-number))
    (is (gen/generatable? ::styles/ibu-min))
    (is (gen/generatable? ::styles/og-min))
    (is (gen/generatable? ::styles/styles-wrapper))
    (is (gen/generatable? ::styles/style))
    (is (gen/generatable? ::styles/carb-min))
    (is (gen/generatable? ::styles/fg-range))
    (is (gen/generatable? ::styles/display-color-max))
    (is (gen/generatable? ::styles/display-color-min))
    (is (gen/generatable? ::styles/display-og-max))
    (is (gen/generatable? ::styles/fg-max))
    (is (gen/generatable? ::styles/display-fg-min))
    (is (gen/generatable? ::styles/fg-min))
    (is (gen/generatable? ::styles/color-min))
    (is (gen/generatable? ::styles/carb-max))
    (is (gen/generatable? ::styles/ibu-max))))
